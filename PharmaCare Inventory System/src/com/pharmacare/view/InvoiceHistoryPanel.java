/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.pharmacare.view;

import javax.swing.table.DefaultTableModel;
import com.pharmacare.db.DBConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author shala
 */
public class InvoiceHistoryPanel extends javax.swing.JPanel {

    /**
     * Creates new form InvoiceHistoryPanel
     */
    public InvoiceHistoryPanel() {
        initComponents();
        loadInvoiceHistory();
    }

    private void loadInvoiceHistory() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) tblInvoiceHistory.getModel();
            dtm.setRowCount(0);

            Connection con = DBConnection.getInstance().getConnection();
            String sql = "SELECT id, sale_date, net_total FROM invoice ORDER BY id DESC";

            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            // දිනය සහ වෙලාව format කරන්න
            java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("yyyy-MM-dd");
            java.text.SimpleDateFormat timeFormat = new java.text.SimpleDateFormat("hh:mm a");

            while (rs.next()) {
                Vector row = new Vector();
                row.add(rs.getInt("id"));

                java.sql.Timestamp timestamp = rs.getTimestamp("sale_date");
                row.add(dateFormat.format(timestamp)); // Format කරපු date එක
                row.add(timeFormat.format(timestamp)); // Format කරපු time එක

                row.add(rs.getDouble("net_total"));
                dtm.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading invoice history.", "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        roundedPanel1 = new com.pharmacare.customui.RoundedPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSearchInvoices = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInvoiceHistory = new javax.swing.JTable();
        roundedPanel2 = new com.pharmacare.customui.RoundedPanel();
        lblSelectedInvoiceId = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblInvoiceItems = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        lblNetTotalValue = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblPaidAmountValue = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblBalanceValue = new javax.swing.JLabel();
        btnReprintReceipt = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Invoice History");

        roundedPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Invoice List  ");

        jLabel3.setText("Search by Invoice ID or Customer:");

        txtSearchInvoices.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchInvoicesKeyReleased(evt);
            }
        });

        tblInvoiceHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Inv. ID", "Date", "Time", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblInvoiceHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblInvoiceHistoryMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblInvoiceHistory);

        javax.swing.GroupLayout roundedPanel1Layout = new javax.swing.GroupLayout(roundedPanel1);
        roundedPanel1.setLayout(roundedPanel1Layout);
        roundedPanel1Layout.setHorizontalGroup(
            roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .addComponent(txtSearchInvoices))
                .addContainerGap())
        );
        roundedPanel1Layout.setVerticalGroup(
            roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearchInvoices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        roundedPanel2.setBackground(new java.awt.Color(242, 245, 249));

        lblSelectedInvoiceId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSelectedInvoiceId.setText("Items in Selected Invoice (ID: 1001)");

        tblInvoiceItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine Name", "Qty", "Price", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblInvoiceItems);

        jLabel5.setText("Net Total :");

        lblNetTotalValue.setText("270.00");

        jLabel7.setText("Paid Amount :");

        lblPaidAmountValue.setText("300.00");

        jLabel9.setText("Balance :");

        lblBalanceValue.setText("30.00");

        btnReprintReceipt.setText("Re-Print Receipt");
        btnReprintReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReprintReceiptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout roundedPanel2Layout = new javax.swing.GroupLayout(roundedPanel2);
        roundedPanel2.setLayout(roundedPanel2Layout);
        roundedPanel2Layout.setHorizontalGroup(
            roundedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(roundedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSelectedInvoiceId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(roundedPanel2Layout.createSequentialGroup()
                        .addGroup(roundedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(roundedPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblBalanceValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(roundedPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblNetTotalValue, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(roundedPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblPaidAmountValue, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                        .addComponent(btnReprintReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        roundedPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblBalanceValue, lblNetTotalValue, lblPaidAmountValue});

        roundedPanel2Layout.setVerticalGroup(
            roundedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSelectedInvoiceId)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(roundedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundedPanel2Layout.createSequentialGroup()
                        .addGroup(roundedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lblNetTotalValue))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(roundedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(lblPaidAmountValue))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(roundedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(lblBalanceValue)))
                    .addComponent(btnReprintReceipt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(roundedPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roundedPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roundedPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(roundedPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblInvoiceHistoryMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblInvoiceHistoryMousePressed
        int selectedRow = tblInvoiceHistory.getSelectedRow();
        if (selectedRow != -1) {
            // පළවෙනි column එකෙන් Invoice ID එක ගැනීම
            int invoiceId = (int) tblInvoiceHistory.getValueAt(selectedRow, 0);

            // මේ invoice එකේ items ටික load කිරීම
            loadInvoiceItems(invoiceId);

            // මේ invoice එකේ payment details ටික load කිරීම
            loadInvoicePaymentDetails(invoiceId);
        }
    }//GEN-LAST:event_tblInvoiceHistoryMousePressed

    private void btnReprintReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReprintReceiptActionPerformed
        int selectedRow = tblInvoiceHistory.getSelectedRow();
        if (selectedRow != -1) {
            int invoiceId = (int) tblInvoiceHistory.getValueAt(selectedRow, 0);
            // අපි printReceipt method එක public static කරලා reuse කරන්නත් පුළුවන්,
            // නැත්නම් සරලවම logic එක මෙතනට copy කරන්නත් පුළුවන්. අපි copy කරමු.

            try {
                Connection con = DBConnection.getInstance().getConnection();
                java.io.InputStream reportStream = getClass().getResourceAsStream("/reports/rpt_receipt.jrxml");

                if (reportStream == null) {
                    JOptionPane.showMessageDialog(this, "Receipt report file not found.", "Resource Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                java.util.HashMap<String, Object> parameters = new java.util.HashMap<>();
                parameters.put("P_INVOICE_ID", invoiceId);

                net.sf.jasperreports.engine.JasperReport jr = net.sf.jasperreports.engine.JasperCompileManager.compileReport(reportStream);
                net.sf.jasperreports.engine.JasperPrint jp = net.sf.jasperreports.engine.JasperFillManager.fillReport(jr, parameters, con);
                net.sf.jasperreports.view.JasperViewer.viewReport(jp, false);

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error re-printing receipt: " + e.getMessage(), "Report Error", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Please select an invoice from the list first.", "No Invoice Selected", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnReprintReceiptActionPerformed

    private void txtSearchInvoicesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchInvoicesKeyReleased
        String searchText = txtSearchInvoices.getText().trim();

        DefaultTableModel dtm = (DefaultTableModel) tblInvoiceHistory.getModel();
        javax.swing.table.TableRowSorter<DefaultTableModel> sorter = new javax.swing.table.TableRowSorter<>(dtm);
        tblInvoiceHistory.setRowSorter(sorter);

        if (searchText.isEmpty()) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(javax.swing.RowFilter.regexFilter("(?i)" + searchText));
            } catch (java.util.regex.PatternSyntaxException e) {
                return;
            }
        }
    }//GEN-LAST:event_txtSearchInvoicesKeyReleased

    private void loadInvoiceItems(int invoiceId) {
        try {
            DefaultTableModel dtm = (DefaultTableModel) tblInvoiceItems.getModel();
            dtm.setRowCount(0);

            Connection con = DBConnection.getInstance().getConnection();
            String sql = "SELECT m.name, ii.quantity, ii.unit_price "
                    + "FROM invoice_item ii "
                    + "INNER JOIN medicine m ON ii.medicine_id = m.id "
                    + "WHERE ii.invoice_id = ?";

            PreparedStatement ps = con.prepareStatement(sql);
            ps.setInt(1, invoiceId);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Vector row = new Vector();
                row.add(rs.getString("m.name"));
                row.add(rs.getInt("ii.quantity"));
                row.add(rs.getDouble("ii.unit_price"));

                double total = rs.getInt("ii.quantity") * rs.getDouble("ii.unit_price");
                row.add(total);

                dtm.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading invoice items.", "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void loadInvoicePaymentDetails(int invoiceId) {
        try {
            Connection con = DBConnection.getInstance().getConnection();
            String sql = "SELECT net_total, paid_amount, balance FROM invoice WHERE id = ?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setInt(1, invoiceId);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                lblNetTotalValue.setText(String.format("%.2f", rs.getDouble("net_total")));
                lblPaidAmountValue.setText(String.format("%.2f", rs.getDouble("paid_amount")));
                lblBalanceValue.setText(String.format("%.2f", rs.getDouble("balance")));

                // ප්‍රධාන title label එකත් update කිරීම
                lblSelectedInvoiceId.setText("Items in Selected Invoice (ID: " + invoiceId + ")");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReprintReceipt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBalanceValue;
    private javax.swing.JLabel lblNetTotalValue;
    private javax.swing.JLabel lblPaidAmountValue;
    private javax.swing.JLabel lblSelectedInvoiceId;
    private com.pharmacare.customui.RoundedPanel roundedPanel1;
    private com.pharmacare.customui.RoundedPanel roundedPanel2;
    private javax.swing.JTable tblInvoiceHistory;
    private javax.swing.JTable tblInvoiceItems;
    private javax.swing.JTextField txtSearchInvoices;
    // End of variables declaration//GEN-END:variables
}
